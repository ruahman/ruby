#!/usr/bin/env ruby

require 'toolbox'

toolBox(ARGV)

# # this is better that docker config
# def process_argv(arg1=nil, arg2=nil, *params)
#     begin
#         case(arg1)


#         when "mssql"
#             require './tools.config'
            
#             if arg2.nil?
#                 puts "running mssql as damone"
#                 dockerMSSQL = "docker run --network #{Config['network']} --name #{Config['mssql']['name']} -e 'ACCEPT_EULA=y' -e 'SA_PASSWORD=#{Config['mssql']['password']}' -v #{Config['mssql']['volumeName']}:/var/opt/mssql -p 1433:1433 -d #{Config['mssql']['image']}"
#                 puts dockerMSSQL
#                 system(dockerMSSQL)
#                 puts "to connect from mssm: 127.0.0.1,1433 sa/#{Config['mssql']['password']}"
#             elsif arg2 == "stop"
#                 puts "stop mssql" 
#                 system("docker stop #{Config['mssql']['name']}")
#             elsif arg2 == "rm"
#                 puts "remove mssql" 
#                 system("docker rm #{Config['mssql']['name']}")
#             elsif arg2 == "restart"
#                 puts "restarting mssql" 
#                 system("docker start #{Config['mssql']['name']}")
#             elsif arg2 == "ip"
#                 puts "get ip address for mssql" 
#                 dockerMSSQL_IP = 'docker container inspect --format "{{.NetworkSettings.IPAddress}}" ' + Config['mssql']['name']
#                 puts dockerMSSQL_IP
#                 system(dockerMSSQL_IP)
#             elsif arg2 == "volume" && params.at(0) == "rm"
#                 dockerVOLUME = "docker volume rm #{Config['mssql']['volumeName']}" 
#                 puts dockerVOLUME
#                 system(dockerVOLUME)
#             elsif arg2 == "cmd"
#                 dockerSQLCMD = "docker run --network #{Config['network']} -it --rm mcr.microsoft.com/mssql-tools:latest /opt/mssql-tools/bin/sqlcmd -S #{Config['mssql']['name']} -U sa -P #{Config['mssql']['password']}"
#                 puts dockerSQLCMD
#                 system(dockerSQLCMD)
#             end
#         when "network"
#             require './tools.config'

#             if arg2.nil?
#                 dockerNETWORK = "docker network create #{Config['network']}"
#                 puts dockerNETWORK
#                 system(dockerNETWORK)
#             else arg2 == "rm"
#                 dockerNETWORK = "docker network rm #{Config['network']}" 
#                 puts dockerNETWORK
#                 system(dockerNETWORK)
#             end
#         else 
#             puts "sorry but tool-box does not have a command for #{arg1}"
#         end
#     rescue LoadError, NameError
#         puts "tools.config.rb needs to be setup in this directory"
#     end
# end
